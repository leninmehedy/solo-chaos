version: '3'

includes:
  root:
    taskfile: Taskfile.root.yml
    flatten: true
  chaos:
    taskfile: ../../chaos/Taskfile.yml

tasks:
  doctor:
    desc: Check environment dependencies for Solo network
    cmds:
      - task check-docker
      - |
        echo "üîç Checking required CLI tools..."
        for cmd in docker kubectl k9s kind helm jq kubectx envsubst; do
          if ! command -v $cmd >/dev/null 2>&1; then
            echo "‚ùå Missing: $cmd"
            echo "üëâ Please, run: task setup"
            exit 1
          else
            echo "‚úÖ $cmd found: $(command -v $cmd)"
          fi
        done
      - |
        echo "üîç Checking optional tools..."
        for cmd in k9s; do
          if ! command -v $cmd >/dev/null 2>&1; then
            echo "‚ö†Ô∏è  Missing (optional): $cmd"
          else
            echo "‚úÖ $cmd found: $(command -v $cmd)"
          fi
        done
      - |
        echo "üîç Checking Node.js & NVM..."
        export NVM_DIR="$HOME/.nvm"
        bash -c "
          source \"$NVM_DIR/nvm.sh\"
          if ! command -v nvm >/dev/null 2>&1; then
            echo '‚ùå NVM not installed'
            echo "üëâ Please, run: task setup"
            exit 1
          else
            echo '‚úÖ NVM installed'
            if ! nvm ls {{.NODEJS_VERSION}} | grep -q '{{.NODEJS_VERSION}}'; then
              echo '‚ö†Ô∏è  Node.js {{.NODEJS_VERSION}} not installed in NVM'
            else
              echo '‚úÖ Node.js {{.NODEJS_VERSION}} available'
            fi
          fi
          echo 'üîç Checking npm package @hashgraph/solo...'
          if ! npm list -g | grep -q '@hashgraph/solo'; then
            echo '‚ö†Ô∏è  @hashgraph/solo not installed globally'
          else
            echo '‚úÖ @hashgraph/solo is installed'
          fi
        "
        echo "‚úÖ Doctor checks completed."
      - |
        echo "üîç Checking npm package @hashgraph/solo..."
        if ! command -v node >/dev/null 2>&1; then
          echo "‚ùå Node.js not found. Exiting."
          echo ""
          echo "üëâ Activate Node.js ${NODEJS_VERSION} in your current shell and re-run:"
          echo "nvm use ${NODEJS_VERSION} && task doctor"
          exit 1
        fi
        if ! npm list -g | grep -q '@hashgraph/solo'; then
          echo "‚ö†Ô∏è  @hashgraph/solo not installed globally"
        else
          echo "‚úÖ @hashgraph/solo is installed"
        fi
      - echo "‚úÖ Doctor checks completed."
  
  setup:
    desc: Initialize the environment (idempotent)
    silent: true
    cmds:
      - |
        echo "üîç Checking and installing required CLI tools..."
        for cmd in kubectl k9s kind helm jq kubectx; do
          if ! command -v $cmd &> /dev/null; then
            echo "‚¨áÔ∏è  Installing $cmd..."
            brew install $cmd
          else
            echo "‚úÖ $cmd already installed"
          fi
        done
        if ! command -v envsubst &> /dev/null; then
          echo "‚¨áÔ∏è  Installing gettext (for envsubst)..."
          brew install gettext
        else
          echo "‚úÖ gettext already installed"
        fi
      - |
        echo "üîç Checking NVM..."
        export NVM_DIR="$HOME/.nvm"
        if [ ! -f "$NVM_DIR/nvm.sh" ]; then
          echo "‚¨áÔ∏è  Installing NVM..."
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
        else
          echo "‚úÖ NVM already installed"
        fi
      - |
        echo "üîç Checking Node.js version...${NODEJS_VERSION}"
        export NVM_DIR="$HOME/.nvm"
        bash -c "
          source \"$NVM_DIR/nvm.sh\"
          if ! nvm ls ${NODEJS_VERSION} | grep -q \"${NODEJS_VERSION}\"; then
            echo \"‚¨áÔ∏è  Installing Node.js ${NODEJS_VERSION}...\"
            nvm install ${NODEJS_VERSION}
          else
            nvm use ${NODEJS_VERSION}
          fi
          echo \"‚úÖ Node.js ${NODEJS_VERSION} is available\"
        "
      - |
        echo "üîç Checking @hashgraph/solo..."
        if ! command -v node >/dev/null 2>&1; then
          echo "‚ùå Node.js not found. Exiting."
          echo ""
          echo "üëâ Activate Node.js ${NODEJS_VERSION} in your current shell and re-run:"
          echo "nvm use ${NODEJS_VERSION} && task setup"
          exit 1
        fi
        
        echo "Using Node.js $(node -v) from $(which node)"
        if ! npm list -g | grep -q '@hashgraph/solo'; then
          echo "‚¨áÔ∏è  Installing @hashgraph/solo..."
          npm install -g @hashgraph/solo
        else
          echo "‚úÖ @hashgraph/solo already installed"
        fi
      - echo "üéâ Environment initialization complete!"

  reset:
    desc: Rollback environment initialization
    silent: true
    cmds:
      - |
        echo "üßπ Removing CLI tools..."
        for cmd in kubectl k9s kind helm; do
          if command -v $cmd &> /dev/null; then
            echo "‚ùå Uninstalling $cmd..."
            brew uninstall $cmd || true
          fi
        done
      - |
        echo "üßπ Removing @hashgraph/solo..."
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        if npm list -g | grep -q '@hashgraph/solo'; then
          npm uninstall -g @hashgraph/solo
        fi
      - |
        echo "üßπ Removing Kind cluster..."
        if kind get clusters | grep -q "${SOLO_CLUSTER_NAME}"; then
          kind delete cluster --name "${SOLO_CLUSTER_NAME}"
          echo "‚úÖ Cluster ${SOLO_CLUSTER_NAME} deleted"
        else
          echo "‚ÑπÔ∏è  No cluster named ${SOLO_CLUSTER_NAME} found"
        fi
      - |
        echo "üßπ Cleaning up ~/.solo..."
        rm -rf ~/.solo || true
        echo "‚úÖ Cleanup complete"

  

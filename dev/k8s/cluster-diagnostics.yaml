---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cluster-diagnostics-cm
  namespace: solo
data:
  entrypoint.sh: |
    #!/usr/bin/env bash
    set -eo pipefail
    
    uid="$(id -u)"
    
    SUDO=""
    if [[ "${uid}" -ne 0 ]]; then
      if ! command -v sudo >/dev/null 2>&1; then
        echo "FATAL: sudo is required to run this script as a non-root user"
        exit 1
      fi
      
      SUDO="$(command -v sudo)"
    fi
    
    export DEBIAN_FRONTEND=noninteractive
    
    ${SUDO} apt update
    ${SUDO} apt upgrade -y
    ${SUDO} apt install -y curl ca-certificates jq netcat-traditional \
      dnsutils iperf3 iputils-ping iproute2 tcpdump iputils-tracepath socat
    
    [[ -d /app ]] || ${SUDO} mkdir -p /app
    
    ${SUDO} iperf3 -p 8081 -s --timestamps &
    ${SUDO} socat -lh -lu -v TCP4-LISTEN:8080,fork EXEC:cat & 
    exec sleep infinity
---
# Headless service for direct pod access (ping, iperf3, etc.)
apiVersion: v1
kind: Service
metadata:
  name: cluster-diagnostics-svc
  namespace: solo
spec:
  selector:
    app: cluster-diagnostics
  type: ClusterIP
  clusterIP: None
  ports:
    - name: socat
      port: 8080
      targetPort: 8080
      protocol: TCP
    - name: iperf3
      port: 8081
      targetPort: 8081
      protocol: TCP

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cluster-diagnostics-sa
  namespace: solo
automountServiceAccountToken: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-diagnostics-role
rules:
  - apiGroups: [""]
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cluster-diagnostics-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-diagnostics-role
subjects:
  - kind: ServiceAccount
    name: cluster-diagnostics-sa
    namespace: solo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster-diagnostics
  namespace: solo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cluster-diagnostics
  template:
    metadata:
      labels:
        app: cluster-diagnostics
        solo.hedera.com/type: 'network-node'
        solo.hedera.com/region: '${REGION}'
    spec:
      serviceAccountName: cluster-diagnostics-sa
      automountServiceAccountToken: true
      containers:
        - name: cluster-diagnostics
          image: debian:bookworm-20250811-slim
          command: ["/bin/bash", "/app/entrypoint.sh"]
          volumeMounts:
            - name: entrypoint
              mountPath: /app/entrypoint.sh
              subPath: entrypoint.sh
          ports:
            - containerPort: 8080
              name: socat
              protocol: TCP
            - containerPort: 8081
              name: iperf3
              protocol: TCP
      volumes:
        - name: entrypoint
          configMap:
            name: cluster-diagnostics-cm
